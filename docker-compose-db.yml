version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: helps-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: helps_db
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - helps-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    build: .
    container_name: helps-app
    restart: unless-stopped
    ports:
      - "${PORT}:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DRIVER: ${DATABASE_DRIVER}
      JPA_DDL_AUTO: ${JPA_DDL_AUTO}
      JPA_SHOW_SQL: ${JPA_SHOW_SQL}
      HIBERNATE_DIALECT: ${HIBERNATE_DIALECT}
      FLYWAY_ENABLED: ${FLYWAY_ENABLED}
      HIKARI_MAX_POOL_SIZE: ${HIKARI_MAX_POOL_SIZE}
      HIKARI_MIN_IDLE: ${HIKARI_MIN_IDLE}
      HIKARI_IDLE_TIMEOUT: ${HIKARI_IDLE_TIMEOUT}
      HIKARI_CONNECTION_TIMEOUT: ${HIKARI_CONNECTION_TIMEOUT}
      PORT: ${PORT}
      FILE_UPLOAD_DIR: ${FILE_UPLOAD_DIR}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      WEBSOCKET_ALLOWED_ORIGINS: ${WEBSOCKET_ALLOWED_ORIGINS}
      LOG_LEVEL: ${LOG_LEVEL}
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - helps-network

volumes:
  postgres_data:
    name: helps_postgres_data
  uploads_data:
    name: helps_uploads_data

networks:
  helps-network:
    driver: bridge
    name: helps_network